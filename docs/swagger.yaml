basePath: /
definitions:
  models.AddAutomobileDTO:
    properties:
      license_plate:
        maxLength: 10
        minLength: 5
        type: string
      model:
        maxLength: 100
        minLength: 2
        type: string
      registration_date:
        $ref: '#/definitions/models.CustomDate'
      release_date:
        $ref: '#/definitions/models.CustomDate'
    required:
    - license_plate
    - model
    - registration_date
    - release_date
    type: object
  models.AddInspectionDTO:
    properties:
      automobile_id:
        type: integer
      card_number:
        maxLength: 20
        minLength: 5
        type: string
      inspection_date:
        $ref: '#/definitions/models.CustomDate'
      notes:
        type: string
    required:
    - automobile_id
    - card_number
    - inspection_date
    type: object
  models.Automobile:
    properties:
      id:
        type: integer
      license_plate:
        maxLength: 10
        minLength: 5
        type: string
      model:
        maxLength: 100
        minLength: 2
        type: string
      registration_date:
        $ref: '#/definitions/models.CustomDate'
      release_date:
        $ref: '#/definitions/models.CustomDate'
    required:
    - license_plate
    - model
    - registration_date
    - release_date
    type: object
  models.CustomDate:
    properties:
      time.Time:
        type: string
    type: object
  models.Inspection:
    properties:
      automobile_id:
        type: integer
      card_number:
        maxLength: 20
        minLength: 5
        type: string
      id:
        type: integer
      inspection_date:
        $ref: '#/definitions/models.CustomDate'
      notes:
        type: string
    required:
    - automobile_id
    - card_number
    - inspection_date
    type: object
  models.UpdateInspectionDTO:
    properties:
      automobile_id:
        type: integer
      card_number:
        maxLength: 20
        minLength: 5
        type: string
      inspection_date:
        $ref: '#/definitions/models.CustomDate'
      notes:
        type: string
    required:
    - automobile_id
    - card_number
    - inspection_date
    type: object
host: localhost:8001
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: API для управления автопарком.
  title: Web-App API
  version: "1.0"
paths:
  /car:
    post:
      consumes:
      - application/json
      description: Добавляет новый автомобиль
      parameters:
      - description: Автомобиль
        in: body
        name: automobile
        required: true
        schema:
          $ref: '#/definitions/models.AddAutomobileDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Добавить новый автомобиль
      tags:
      - автомобиль
  /car/:id:
    delete:
      consumes:
      - application/json
      description: Удаляет  автомобиль
      parameters:
      - description: ID автомобиля
        in: path
        name: id
        required: true
        type: integer
      - description: Удаление автомобиля
        in: body
        name: automobile
        required: true
        schema:
          $ref: '#/definitions/models.Automobile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Удалить автомобиль
      tags:
      - автомобиль
    get:
      consumes:
      - application/json
      description: Возвращает  автомобиль
      parameters:
      - description: ID автомобиля
        in: path
        name: id
        required: true
        type: integer
      - description: Получение автомобиля по id
        in: body
        name: automobile
        required: true
        schema:
          $ref: '#/definitions/models.Automobile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Получить автомобиль по id
      tags:
      - автомобиль
    patch:
      consumes:
      - application/json
      description: Обновляет  автомобиль
      parameters:
      - description: ID автомобиля
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные автомобиля
        in: body
        name: automobile
        required: true
        schema:
          $ref: '#/definitions/models.Automobile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Обновить автомобиль
      tags:
      - автомобиль
  /cars:
    get:
      consumes:
      - application/json
      description: Возвращает  список автомобилей
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Ошибка на сервере
      summary: Получить список автомобилей
      tags:
      - автомобиль
  /inspection:
    post:
      consumes:
      - application/json
      description: Добавляет тех осмотр
      parameters:
      - description: Техосмотр
        in: body
        name: inspection
        required: true
        schema:
          $ref: '#/definitions/models.AddInspectionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Добавить тех осмотр
      tags:
      - тех осмотр
  /inspection/:id:
    delete:
      consumes:
      - application/json
      description: Удаляет тех осмотр
      parameters:
      - description: ID тех осмотра
        in: path
        name: id
        required: true
        type: integer
      - description: Удаление тех осмотра
        in: body
        name: automobile
        required: true
        schema:
          $ref: '#/definitions/models.Inspection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Удалить тех осмотр по id
      tags:
      - тех осмотр
    get:
      consumes:
      - application/json
      description: Возвращает тех осмотр
      parameters:
      - description: ID тех осмотра
        in: path
        name: id
        required: true
        type: integer
      - description: Получение тех осмотра по id
        in: body
        name: automobile
        required: true
        schema:
          $ref: '#/definitions/models.Inspection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Получить тех осмотр по id
      tags:
      - тех осмотр
    patch:
      consumes:
      - application/json
      description: Обновляет  данные тех осмотра
      parameters:
      - description: ID техосмотра
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные техосмотра
        in: body
        name: inspection
        required: true
        schema:
          $ref: '#/definitions/models.UpdateInspectionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно
        "400":
          description: Неверные данные запроса
        "500":
          description: Ошибка на сервере
      summary: Обновить данные о тех осмотре
      tags:
      - тех осмотр
  /inspections:
    get:
      consumes:
      - application/json
      description: Возвращает список тех осмотров
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Ошибка на сервере
      summary: Получить список тех осмотров
      tags:
      - тех осмотр
  /report:
    get:
      consumes:
      - application/json
      description: Возвращает агрегированные данные по автомобилям
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Ошибка на сервере
      summary: Получить отчёт по автомобилям
      tags:
      - автомобиль
swagger: "2.0"
